@model CarDealership.Models.HomepageViewModel

@{
    ViewBag.Title = "Home Page";
}

<style>
    .warm-text {
        color: #ffac00;
    }
    .carousel-item h3 {
        font-weight: 800;
    }
    .carousel-indicators li {
        background-color: #000;
    }
    .carousel-indicators {
        bottom: -4rem;
    }
    .carousel-control-next {
        width: 50px;
        right: -3rem;
    }
    .carousel-control-prev {
        width: 50px;
        left: -3rem;
    }
    .carousel-control-prev-icon {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23000' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath d='M5.25 0l-4 4 4 4 1.5-1.5L4.25 4l2.5-2.5L5.25 0z'/%3e%3c/svg%3e");
    }
    .carousel-control-next-icon {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23000' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath d='M2.75 0l-1.5 1.5L3.75 4l-2.5 2.5L2.75 8l4-4-4-4z'/%3e%3c/svg%3e");
    }
    .featured-star {
        position: absolute;
        right: 0;
        top: 0;
        width: 35px;
        margin: 10px;
    }
    .my-jumbotron {
        background: rgba(0, 0, 0, 0) url("https://www.toptal.com/designers/subtlepatterns/patterns/memphis-mini.png") repeat scroll 0% 0%;
        border: 1px solid rgba(0, 0, 0, 0.05);
    }
</style>

<div class="jumbotron my-jumbotron">
    <div class="container">
        <div id="specialsCarousel" class="carousel slide" data-ride="carousel">
            <ol class="carousel-indicators">
                @for (int j = 0; j < Model.Specials.Count(); j++)
                {
                    <li data-target="#specialsCarousel" data-slide-to="@j" @(j == 0 ? "class=active" : "")></li>
                }
            </ol>
            <div class="carousel-inner">
                @{ int i = 0; }
                @foreach (var special in Model.Specials)
                {
                    <div class="carousel-item@(i == 0 ? " active" : "")">
                        <div class="d-flex">
                            <img src="~/Content/img/dollar_sign.png" style="height:96px" />
                            <div style="margin-left:15px">
                                <h3 class="warm-text">@special.Title</h3>
                                <p>@special.Description</p>
                            </div>
                        </div>
                    </div>
                    i++;
                }
            </div>
            <a class="carousel-control-prev" href="#specialsCarousel" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#specialsCarousel" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    </div>
</div>

<div class="d-flex flex-column align-items-center">
    <div id="featured-container" class="d-inline-flex justify-content-center flex-wrap justify-content-sm-center justify-content-xl-center">
        @foreach (var car in Model.Featured)
        {
            <div class="card card-body text-center align-items-center" style="margin:10px; min-width:205px">
                <img src="~/Content/img/star.png" title="featured" alt="featured" class="featured-star" />
                <a href="/Inventory/Details/@car.Id" class="warm-text">
                    <img src="~/Content/img/large_car_black.png" style="width:96px" />
                    <h6>@car.Year @car.Make @car.Model</h6>
                    <p>$@car.MSRP</p>
                </a>
            </div>
        }
    </div>
</div>

<script>
    /**
     * Credits for this fix to Ryan Ringler
     * Source: http://ryanringler.com/blog/2014/08/24/fixed-height-carousel-for-twitter-bootstrap
     */
    function carouselNormalization() {
        var items = $('#specialsCarousel .carousel-item'),  //grab all slides
            heights = [],                                   //create empty array to store height values
            tallest;                                        //create variable to make note of the tallest slide

        if (items.length) {
            function normalizeHeights() {
                items.each(function () {                    //add heights to array
                    heights.push($(this).height());
                });
                tallest = Math.max.apply(null, heights);    //cache largest value
                items.each(function () {
                    $(this).css('min-height', tallest + 'px');
                });
            };
            normalizeHeights();

            $(window).on('resize orientationchange', function () {
                tallest = 0, heights.length = 0;            //reset vars
                items.each(function () {
                    $(this).css('min-height', '0');         //reset min-height
                });
                normalizeHeights();                         //run it again 
            });
        }
    }

    /**
     * Wait until all the assets have been loaded so a maximum height 
     * can be calculated correctly.
     */
    window.onload = function () {
        carouselNormalization();
    }
</script>